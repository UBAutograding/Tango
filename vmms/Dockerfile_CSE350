# Autolab - autograding docker image

FROM ubuntu:18.04
MAINTAINER David Dobmeier <daviddob@buffalo.edu>

#C++ Setup
RUN apt-get update
RUN apt-get install -y gcc
RUN apt-get install -y make
RUN apt-get install -y build-essential
RUN apt-get install -y libcunit1-dev libcunit1-doc libcunit1
RUN apt-get install -y apt-utils

#Python Setup
RUN apt-get update --fix-missing && \
    DEBIAN_FRONTEND=nointeractive apt-get install -y \
    python3 python3-numpy python3-nose python3-pandas \
    python python-numpy python-nose python-pandas \
    pep8 python-pip python3-pip python-wheel \
    python-sphinx && \
    pip install --upgrade setuptools
  
#Java Setup
RUN apt-get update --fix-missing
RUN apt-get install -y default-jdk

#Valgrind Setup
RUN apt-get update
RUN apt-get install -y valgrind

#SML Setup
RUN mkdir -p /usr/local/bin/sml
WORKDIR /usr/local/bin/sml
RUN apt-get install -y gcc-multilib g++-multilib lib32z1 lib32ncurses5 wget
RUN wget http://www.smlnj.org/dist/working/110.78/config.tgz
RUN tar -xzvf config.tgz
RUN config/install.sh
RUN ln -s /usr/local/bin/sml/bin/sml /usr/local/sbin/sml
RUN ln -s /usr/local/bin/sml/bin/ml-lex /usr/local/sbin/ml-lex
RUN ln -s /usr/local/bin/sml/bin/ml-yacc /usr/local/sbin/ml-yacc

#Flex setup
RUN apt-get install -y flex

#Bison Setup
RUN apt-get install -y bison

#Utility setup
RUN apt-get install -y unzip

#NodeJS setup
RUN apt-get update --fix-missing
RUN apt-get install -y nodejs
RUN apt-get install -y npm

#OCaml Setup
RUN apt-get install -y ocaml

#Rust Setup
RUN apt-get install -y curl
RUN curl --proto '=https' --tlsv1.2 -sSf -o rustup.sh https://sh.rustup.rs && chmod +x rustup.sh 
RUN sh rustup.sh -y
ENV PATH="${PATH}:/root/.cargo/bin"

# Install autodriver
WORKDIR /home
RUN useradd autolab
RUN useradd autograde
RUN mkdir autolab autograde output
RUN chown autolab:autolab autolab
RUN chown autolab:autolab output
RUN chown autograde:autograde autograde
RUN apt-get update && apt-get install -y sudo 
RUN apt-get install -y git
RUN git clone https://github.com/autolab/Tango.git
WORKDIR Tango/autodriver
RUN make clean && make
RUN cp autodriver /usr/bin/autodriver
RUN chmod +s /usr/bin/autodriver

# Clean up
WORKDIR /home
RUN apt-get -y autoremove
RUN rm -rf Tango/

# Check installation
RUN ls -l /home
RUN which autodriver
RUN which javac
RUN which sml
RUN g++ --version
RUN ls -la /root
RUN cargo --version

WORKDIR /opt


